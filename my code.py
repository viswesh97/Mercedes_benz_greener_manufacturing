import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

%matplotlib inline
train_data = pd.read_csv("E:\Mercedes_train.csv")
train_data.head()
plt.figure(figsize=(8,6))
plt.scatter(range(train_data.shape[0]), np.sort(train_data.y.values))
plt.xlabel('value')
plt.ylabel('y')
plt.show()
sort_order = np.sort(train_data['X0'].unique().tolist())
plt.figure(figsize=(12,6))
sns.boxplot(x='X0', y='y', order=sort_order,data=train_data)
plt.xlabel('X0')
plt.ylabel('y')
plt.show()
from sklearn.preprocessing import LabelEncoder
X0_encoder=LabelEncoder()
train_data['X0']=X0_encoder.fit_transform(train_data['X0'])
X1_encoder=LabelEncoder()
train_data['X1']=X1_encoder.fit_transform(train_data['X1'])
X2_encoder=LabelEncoder()
train_data['X2']=X2_encoder.fit_transform(train_data['X2'])
X3_encoder=LabelEncoder()
train_data['X3']=X3_encoder.fit_transform(train_data['X3'])
X4_encoder=LabelEncoder()
train_data['X4']=X4_encoder.fit_transform(train_data['X4'])
X5_encoder=LabelEncoder()
train_data['X5']=X5_encoder.fit_transform(train_data['X5'])
X6_encoder=LabelEncoder()
train_data['X6']=X6_encoder.fit_transform(train_data['X6'])
X8_encoder=LabelEncoder()
train_data['X8']=X8_encoder.fit_transform(train_data['X8'])

train_data.head()
X=train_data.drop(columns='y')
Y=train_data['y']
X=np.array(X)
Y=np.array(Y)
Y=Y.reshape(-1,1)
X.shape,Y.shape
from sklearn.preprocessing import StandardScaler
scalerx=StandardScaler()
scalery=StandardScaler()
X=scalerx.fit_transform(X)
Y=scalery.fit_transform(Y)
from sklearn.ensemble import RandomForestRegressor
Rf=RandomForestRegressor(random_state=2)
Rf.fit(X,Y)
test_data = pd.read_csv('E:\Mercedes_test.csv')
test_data.head()
from sklearn.preprocessing import LabelEncoder
X10_encoder=LabelEncoder()
test_data['X0']=X10_encoder.fit_transform(test_data['X0'])
X11_encoder=LabelEncoder()
test_data['X1']=X11_encoder.fit_transform(test_data['X1'])
X12_encoder=LabelEncoder()
test_data['X2']=X12_encoder.fit_transform(test_data['X2'])
X13_encoder=LabelEncoder()
test_data['X3']=X13_encoder.fit_transform(test_data['X3'])
X14_encoder=LabelEncoder()
test_data['X4']=X14_encoder.fit_transform(test_data['X4'])
X15_encoder=LabelEncoder()
test_data['X5']=X15_encoder.fit_transform(test_data['X5'])
X16_encoder=LabelEncoder()
test_data['X6']=X16_encoder.fit_transform(test_data['X6'])
X18_encoder=LabelEncoder()
test_data['X8']=X18_encoder.fit_transform(test_data['X8'])
test_data=scalerx.fit_transform(test_data)
test_data=np.array(test_data)
test_data.shape
pred = Rf.predict(test_data)
train_score = Rf.score(X, Y)
print('Train F1 Score = {} %'.format(round(train_score,4)*100))
test_score = Rf.score(test_data,pred)
print('Test F1 Score = {} %'.format(round(test_score,4)*100))
